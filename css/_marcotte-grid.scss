/*
 * Marcotte Grid System v1.0
 * Learn More: https://github.com/lynnwallenstein/Marcotte-Grid
 * Licensed under GPL and MIT.
*/

$grid-columns: 24;
$default-layout-width: 960px;
$unit : ($default-layout-width / $grid-columns) / $default-layout-width ;


/*  Default Layout: 960px  */

@mixin grid_container  {
  margin: auto;
  width: $default-layout-width;
  //  Tablet Layout: 768px.
  @media only screen and (min-width: 768px) and (max-width: 991px) {
      width: 764px;
  }

  //  Mobile Layout: 320px.
  @media only screen and (max-width: 767px) {
      width: 320px;
  }

  //  Wide Mobile Layout: 480px.
  @media only screen and (min-width: 480px) and (max-width: 767px) {
      width: 480px;
  }
}

//grid(size,prefix,suffix,push,pull,firstcol,lastcol)

@mixin grid($size: 1, $prefix: 0, $suffix: 0, $push: 0, $pull: 0, $firstcol: false, $lastcol: false) {
  @if $size == $grid-columns {
    width: percentage( $size * $unit ); // Full Size by filling up every column. No gutters.
  } @else {
    @if (($firstcol == false) and ($lastcol == false)) { // Isn't a First or Last Column. Gutter added on left and right side
      width: percentage(( $size * $unit ) - .01 );
      margin-right: percentage(0.005);
      margin-left: percentage(0.005);
    } @else if ($firstcol != false) and ($lastcol != false) { // Both a first and last column. No gutters
      width: percentage(( $size * $unit ));
    } @else if ($firstcol != false) { // First column, not gutter on left
      width: percentage(( $size * $unit ) - .05 );
      margin-left: 0;
      margin-right: percentage(0.005);
    } @else { // Last column, no gutter on right
      width: percentage(( $size * $unit ) - .05 );
      margin-left: percentage(0.005);
      margin-right: 0;
    }
    @if $prefix != 0 {
      padding-left: percentage( $prefix * $unit );
    }
    @if $suffix != 0 {
      padding-right: percentage( $suffix * $unit );
    }
    @if $push != 0 {
      left: -percentage( $push * $unit );
    }
    @if $pull != 0 {
      right: -percentage( $pull * $unit );
    }
  }
}